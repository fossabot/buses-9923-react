{"version":3,"sources":["components/Park.jsx","components/Log.jsx","util/bus.js","util/logger.js","util/park.js","components/Dashboard.jsx","components/App.jsx","index.js"],"names":["Square","props","react_default","a","createElement","className","value","Park","symbol","direction","y","_this","this","places","_loop","i","bus","buses","find","x","getBusSymbol","facing","push","renderSquare","renderARow","React","Component","SingleLog","log","message","Log","logs","logs_html","forEach","element","renderLogs","directions","Bus","arguments","length","undefined","Object","classCallCheck","setFacing","face_to","includes","toUpperCase","TypeError","_facing","indexOf","concat","logger","Logger","stdout","msg_types","_logs","_stdout","msg_type","timestamp","Date","toISOString","toConsumableArray","console","assign","width","_buses","index","getBus","getCountOfBuses","defineProperty","right","turnRight","turnLeft","turn","place","the_park","Dashboard","possibleConstructorReturn","getPrototypeOf","call","state","engine","show_report","show_log","setState","_this2","components_Park","onChange","event","parseInt","target","onClick","setBuses","move","left","disabled","alert","components_Log","App","components_Dashboard","rootElement","document","getElementById","ReactDOM","render","components_App"],"mappings":"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","file":"static/js/main.6681421e.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Square(props) {\n  return (\n    <button className=\"square\">\n      <b>{props.value}</b>\n    </button>\n  );\n}\n\nclass Park extends React.Component {\n  renderSquare(symbol) {\n    return <Square value={symbol} />;\n  }\n\n  getBusSymbol(direction) {\n    if (direction === \"NORTH\") return \"^\";\n    else if (direction === \"EAST\") return \">\";\n    else if (direction === \"SOUTH\") return \"v\";\n    else if (direction === \"WEST\") return \"<\";\n    return \"\";\n  }\n\n  renderARow(y) {\n    const places = [];\n    for (let i = 0; i < 5; i++) {\n      let symbol = \" \";\n      const bus = this.props.buses.find(x => {\n        return x.x === i && x.y === y;\n      });\n      if (bus) {\n        symbol = this.getBusSymbol(bus.facing);\n      }\n      places.push(this.renderSquare(symbol));\n    }\n    return places;\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">{this.renderARow(4)}</div>\n        <div className=\"board-row\">{this.renderARow(3)}</div>\n        <div className=\"board-row\">{this.renderARow(2)}</div>\n        <div className=\"board-row\">{this.renderARow(1)}</div>\n        <div className=\"board-row\">{this.renderARow(0)}</div>\n      </div>\n    );\n  }\n}\n\nexport default Park;\n","import React from \"react\";\n\nfunction SingleLog(props){\n  return (\n    <div>{props.log.message} <br/></div>\n  )\n}\n\nfunction Log(props){\n  const renderLogs= (logs) =>{\n    const logs_html = []\n    logs.forEach(element => {\n      logs_html.push(<SingleLog log= {element}/>);\n    });\n    return logs_html;\n  }\n\n  return (\n    <div className=\"Log\">\n    <h4>Logs</h4>\n    {renderLogs(props.logs)}\n    </div>\n  )\n}\nexport default Log;","const directions = [\"NORTH\", \"EAST\", \"SOUTH\", \"WEST\"];\n\nclass Bus {\n  /**\n   * The constructor of Bus\n   * @param {number} [x] - [0 - 4], in x dimension\n   * @param {number} [y] - [0 - 4], in y dimension\n   * @param {string} [facing] - The facing direction default 'NORTH'\n   */\n  constructor(x = 0, y = 0, facing = \"NORTH\") {\n    this.x = x;\n    this.y = y;\n    this.setFacing(facing);\n  }\n  get facing() {\n    return directions[this._facing];\n  }\n  set facing(face_to) {\n    this.setFacing(face_to);\n  }\n\n  /**\n   * Set the bus facing direction\n   * @param {string} face_to - the direction the bus is facing to\n   */\n  setFacing(face_to) {\n    if (\n      typeof face_to === \"string\" &&\n      directions.includes(face_to.toUpperCase())\n    ) {\n      this._facing = directions.indexOf(face_to.toUpperCase());\n    } else {\n      throw new TypeError(\n        \"Error, the direction is not correct, bus cannot be initialized.\"\n      );\n    }\n  }\n\n  /**\n   * Turn the bus right\n   */\n  turnRight() {\n    if (this._facing === 3) {\n      this._facing = 0;\n    } else {\n      this._facing++;\n    }\n  }\n\n  /**\n   * Turn the bus left\n   */\n  turnLeft() {\n    if (this._facing === 0) {\n      this._facing = 3;\n    } else {\n      this._facing--;\n    }\n  }\n\n  toString() {\n    return `${this.x},${this.y},${directions[this._facing]}`;\n  }\n}\n\nexport default Bus;\n","class Logger {\n  constructor(stdout = true, msg_types = [\"alert\", \"logging\"]) {\n    this.msg_types = msg_types;\n    this._logs = [];\n    this._stdout = stdout;\n  }\n  get logs() {\n    const logs = [...this._logs];\n    return logs;\n  }\n  get stdout() {\n    return this._stdout;\n  }\n  set stdout(stdout) {\n    this._stdout = stdout;\n  }\n\n  log(message) {\n    this.log(\"logging\", message);\n  }\n  log(msg_type, message) {\n    const timestamp = new Date().toISOString();\n    this._logs = [...this._logs, { timestamp, msg_type, message }];\n    if (this.stdout && this.msg_types.includes(msg_type)) {\n      console.log(`${timestamp} - ${msg_type} - ${message}`);\n    }\n  }\n  latest() {\n    const last_log = Object.assign({}, this._logs[this._logs.length - 1]);\n    return last_log;\n  }\n}\nexport default new Logger();\n","import Bus from './bus'\nimport logger from './logger'\n\nclass Park{\n  /**\n   * The constructor of the car park\n   * @param {number} width - The width of the car park\n   * @param {number} length - The length of the car park\n   */\n  constructor(width, length){\n    this.width = width;\n    this.length = length;\n    this._buses = [];\n  }\n\n  get buses(){\n    return Object.assign([], this._buses);\n  }\n  set buses(buses){\n    this._buses = buses;\n  }\n\n  /**\n   * @return {number} Return the count of all buses\n   */\n  getCountOfBuses(){\n    return this.buses.length;\n  }\n  /**\n   *\n   * @param {number} index - The index of the bus in the array\n   * @return {Bus} Return a copy of last bus in the array\n   */\n  getBus(index){\n    if (index<0){\n      return null;\n    }else{\n      return this.buses[index];\n    }\n  }\n  getLatestBus(){\n    return this.getBus(this.getCountOfBuses()-1);\n  }\n\n  /**\n   * Place a bus to a position (x,y)\n   * @param {number} x - [0 - 4], in x dimension\n   * @param {number} y - [0 - 4], in y dimension\n   * @param {string} facing - The direction, where the bus will face\n   */\n  place(x,y, facing, index=this.getCountOfBuses()){\n    if (this.getCountOfBuses() >= width*length){\n      // no place to park\n      logger.log('alert', `The park is already full, cannot be parked here - (${x}, ${y})`);\n    }else if (x>=width || x <0 || y>=length || y<0){\n      // outside of park\n      logger.log('alert', `You cannot park to (${x}, ${y}) - outside of car park, you will get a ticket!!!`);\n    }else if (this.buses.find((bus)=>{return bus.x===x && bus.y===y})){\n      // already a bus parking here\n      logger.log('alert', `There is a bus already here - (${x}, ${y}), cannot be parked here.`);\n    }else{\n      logger.log('logging', `Parked at (${x}, ${y})`)\n      let bus = new Bus(x,y,facing);\n      this.buses = Object.assign([], this.buses, { [index]: bus});\n    }\n  }\n  /**\n   * Turn a bus to right or left\n   * @param {Bus} bus - The bus required to be turned\n   * @param {number} index - The bus index in the list\n   * @param {boolean} [right] - Turn right?\n   */\n  turn(index, right){\n    if(index >= 0 ){\n      const bus=this.getBus(index);\n      if(right === true){\n        bus.turnRight();\n        logger.log('logging', 'Turn Right');\n      }else{\n        bus.turnLeft();\n        logger.log('logging', 'Turn Left');\n      }\n      // set the buses list to new cloned one\n      this.buses = Object.assign([], this.buses, { [index]: bus});\n\n    }else{\n      logger.log('alert', 'Command ignore, you cannot turn any bus before you park one');\n    }\n  }\n  left(index=this.getCountOfBuses()-1){\n    this.turn(index, false);\n  }\n  right(index=this.getCountOfBuses()-1){\n    this.turn(index, true)\n  }\n/**\n * Move the bus (by default is the last bus)\n * @param {number} index - The index of the bus in buses array\n */\n  move(index=this.getCountOfBuses()-1){\n    if(index >= 0 ){\n      const bus=this.getBus(index);\n      let x = bus.x;\n      let y = bus.y;\n      const facing = bus.facing;\n      if (facing === 'NORTH') y++;\n      if (facing === 'SOUTH') y--;\n      if (facing === 'EAST') x++;\n      if (facing === 'WEST') x--;\n\n      this.place(x,y,facing,index);\n    }else{\n      logger.log('alert', 'Command ignore, you cannot move any bus before you park one');\n    }\n\n\n  }\n\n  /**\n   * Clear the whole car park.\n   */\n  clear(){\n    this._buses = [];\n  }\n\n  toString(){\n    return `Car Park ${this.width}x${this.length}: \\n ${this.buses}`;\n  }\n}\n\nexport const width = 5;\nexport const length = 5;\nexport const the_park =  new Park(width, length); // force singleton here, make sure park is one and only one.\n","import React from \"react\";\nimport Park from \"./Park\";\nimport Log from \"./Log\";\nimport { the_park } from \"../util/park\";\nimport logger from \"../util/logger\";\n\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      x: 0,\n      y: 0,\n      facing: \"NORTH\",\n      engine: the_park,\n      buses: [],\n      show_report: true,\n      show_log: false,\n    };\n  }\n  setBuses() {\n    this.setState({buses:the_park.buses});\n  }\n  render() {\n    return (\n      <div>\n        <Park buses={this.state.buses} />\n        <hr />\n        <div className=\"board-row\">\n          <select\n            className=\"command\"\n            value={this.state.x}\n            onChange={event => {\n              this.setState({ x: parseInt(event.target.value, 10) });\n            }}\n          >\n            <option value=\"0\">0</option>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n          </select>\n          <select\n            className=\"command\"\n            value={this.state.y}\n            onChange={event => {\n              this.setState({ y: parseInt(event.target.value, 10) });\n            }}\n          >\n            <option value=\"0\">0</option>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n          </select>\n          <select\n            className=\"command\"\n            value={this.state.facing}\n            onChange={event => {\n              this.setState({ facing: event.target.value });\n            }}\n          >\n            <option value=\"NORTH\">NORTH</option>\n            <option value=\"EAST\">EAST</option>\n            <option value=\"SOUTH\">SOUTH</option>\n            <option value=\"WEST\">WEST</option>\n          </select>\n          <button\n            className=\"command\"\n            onClick={() => {\n              this.state.engine.place(\n                this.state.x,\n                this.state.y,\n                this.state.facing\n              );\n              this.setBuses();\n            }}\n          >\n            Place\n          </button>\n        </div>\n        <hr />\n        <div className=\"board-row\">\n          <button\n            className=\"command\"\n            onClick={() => {\n              this.state.engine.move();\n              this.setBuses();\n            }}\n          >\n            Move\n          </button>\n          <button\n            className=\"command\"\n            onClick={() => {\n              this.state.engine.left();\n              this.setBuses();\n            }}\n          >\n            Turn Left\n          </button>\n          <button\n            className=\"command\"\n            onClick={() => {\n              this.state.engine.right();\n              this.setBuses();\n            }}\n          >\n            Turn Right\n          </button>\n          <button\n            className=\"command\"\n            disabled = {!this.state.show_report}\n            onClick={() => {\n              alert('Do not need to click `Report` button, because result is displayed in UI after data changing.');\n              this.setState({show_report: false});\n            }}\n          >\n            Report\n          </button>\n        </div>\n        <hr />\n        <div className=\"board-row\">\n          <button\n            className=\"command\"\n            onClick={() => {\n              this.setState({show_log: !this.state.show_log});\n            }}\n          >\n            Toggle Log\n          </button>\n        </div>\n        <hr/>\n        {this.state.show_log ?<Log logs={logger.logs}></Log>:null }\n\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport Dashboard from \"./Dashboard\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <h1>🚌 A Bus Park 🚌</h1>\n        <b>Try Give Some Commands To Run!</b>\n\n        <Dashboard />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}